import React from "react";
import Button from "@material-ui/core/Button";
import { Grid, TextField } from "@material-ui/core";
import { isEqual } from "../util/isEqual";
import SelectForm from "./shared/SelectForm";

/**
 * input: array
 * variants = [
    {
      type: "color",
      variations: ["Red", "Blue", "Green", "Yellow"],
    },
    { type: "size", variations: ["S", "M", "L"] },
  ];

 * output: array
 * variations = [
  { color: "Red", qty: "1", size: "S" },
  { color: "Red", qty: "3", size: "L" },
  { color: "Blue", qty: "1", size: "S" },
  { color: "Blue", qty: "2", size: "M" },
]
 */

const VariationsForm = ({
  variationsData,
  variations,
  setVariations,
  variationTotalQty,
  totalQty,
}) => {
  const handleAdd = () => {
    let data = { ...variations };
    let { color, size, qty, instances } = data;

    const instance = { color, size, qty };

    let combinedQty = parseInt(qty);
    for (let i = 0; i < instances.length; i++) {
      let {
        color: currentColor,
        size: currentSize,
        qty: currentQty,
      } = instances[i];
      if (
        isEqual({ color, size }, { color: currentColor, size: currentSize })
      ) {
        combinedQty += parseInt(currentQty);
        instance.qty = combinedQty;
        instances[i] = instance;
        return doCleanup(data);
      }
    }

    instances.push(instance);
    doCleanup(data);
  };

  const doCleanup = (data) => {
    let { size, qty } = data;
    size = qty = "";
    data = { ...data, size, qty };
    setVariations(data);
  };

  const handleInputChange = (e) => {
    const { value, name } = e.target;
    setVariations({ ...variations, [name]: value });
  };

  const selectDefinitions = variationsData.map((v) => ({
    variant: "outlined",
    inputLabel: v.name,
    labelId: `${v.name}-select-label`,
    name: `${v.name}`,
    value: variations[v.name],
    values: v.instances,
    onChange: handleInputChange,
  }));

  return (
    <>
      <Grid
        container
        alignItems="center"
        justify="space-between"
        style={{ marginTop: "1.5rem" }}
      >
        {selectDefinitions.map((d, i) => (
          <Grid item key={`autoGeneratedSelectForms${i}`}>
            <SelectForm {...d} />
          </Grid>
        ))}
        <Grid item>
          <TextField
            variant="outlined"
            style={{ width: 100 }}
            id="qty"
            name="qty"
            label="qty"
            type="number"
            value={variations.qty}
            onChange={handleInputChange}
          />
        </Grid>
        <Grid item>
          <Button
            disabled={variationTotalQty >= parseInt(totalQty)}
            variant="outlined"
            color="primary"
            onClick={handleAdd}
          >
            Add
          </Button>
        </Grid>
      </Grid>
    </>
  );
};

export default VariationsForm;
